services:
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --save 60 1
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  searxng:
    image: searxng/searxng:latest
    restart: unless-stopped
    environment:
      SEARXNG_BASE_URL: "http://localhost:8080/"
      SEARXNG_SECRET: "change_this_searxng_secret_key"
    volumes:
      - ./config/searxng/settings.yml:/etc/searxng/settings.yml:ro
    ports:
      - "127.0.0.1:8080:8080"
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "1"
    depends_on:
      - redis

  extractor:
    build: ./services/extractor
    restart: unless-stopped
    environment:
      PORT: "8055"
      REDIS_URL: "redis://redis:6379"
      MAX_CONTENT_LENGTH: "10485760"  # 10MB
      REQUEST_TIMEOUT: "30"
    ports:
      - "8055:8055"
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8055/health"]
      interval: 30s
      timeout: 3s
      retries: 3

  vectorstore:
    build: ./services/vectorstore
    restart: unless-stopped
    environment:
      PYTHONPATH: "/app"
      OLLAMA_URL: "http://host.docker.internal:11434"
    volumes:
      - ./data/chroma_db:/app/data/chroma_db
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "python", "-c", "import chromadb; print('OK')"]
      interval: 30s
      timeout: 10s
      retries: 3


  mcp-client:
    build: .
    environment:
      WEBSEARCH_URL: "http://extractor:8055"
      OLLAMA_URL: "http://host.docker.internal:11434"
      PYTHONPATH: "/app"
      CHROMA_PATH: "/app/data/chroma_db"
    volumes:
      - ./data/chroma_db:/app/data/chroma_db
      - ./src:/app/src
      - ./services:/app/services
      - ./mcp_servers_config.json:/app/mcp_servers_config.json
    depends_on:
      - extractor
      - vectorstore
      - searxng
      - redis
    stdin_open: true
    tty: true
    command: ["python", "src/client/mcp_multi_client.py"]

volumes:
  redis_data: